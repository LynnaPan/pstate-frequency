#
#  Copyright (C) 2014 - 2016 Peter Kenji Yamanaka
#
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License along
#  with this program; if not, write to the Free Software Foundation, Inc.,
#  51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
#

_pstate-frequency()
{
        local cur prev short_actions shorts_options long_options long_actions plans
        COMPREPLY=()
        cur="${COMP_WORDS[COMP_CWORD]}"
        prev="${COMP_WORDS[COMP_CWORD-1]}"
        short_actions="-V -H -S -G -d -q"
        long_actions="--quiet --version --help --set --get --quiet --color --delay"
        short_set_options="-m -n -t -p -g"
        short_get_options="-c -r"
        long_set_options="--max --min --turbo --plan --governor --sleep"
        long_get_options="--current --real"
        plans="powersave performance max-performance"
        governors="$(cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_available_governors)"

        if [[ ${cur} = --* ]]; then
                if [[ ${prev} = "--set" ]] || [[ ${prev} = "-S" ]]; then
                        COMPREPLY=( $(compgen -W "${long_set_options}" -- ${cur}) )
                elif [[ ${prev} = "--get" ]] || [[ ${prev} = "-G" ]]; then
                        COMPREPLY=( $(compgen -W "${long_get_options}" -- ${cur}) )
                elif [[ ${prev} = "--plan" ]] || [[ ${prev} = "-p" ]]; then
                        COMPREPLY=( $(compgen -W "${plans}" -- ${cur}) )
                else
                        COMPREPLY=( $(compgen -W "${long_actions}" -- ${cur}) )
                fi
                return 0
        elif [[ ${cur} = * ]]; then
                if [[ ${prev} = "--set" ]] || [[ ${prev} = "-S" ]]; then
                        COMPREPLY=( $(compgen -W "${short_set_options}" -- ${cur}) )
                elif [[ ${prev} = "--get" ]] || [[ ${prev} = "-G" ]]; then
                        COMPREPLY=( $(compgen -W "${short_get_options}" -- ${cur}) )
                elif [[ ${prev} = "--plan" ]] || [[ ${prev} = "-p" ]]; then
                        COMPREPLY=( $(compgen -W "${plans}" -- ${cur}) )
                elif [[ ${prev} = "--governor" ]] || [[ ${prev} = "-g" ]]; then
                        COMPREPLY=( $(compgen -W "${governors}" -- ${cur}) )
                else
                        COMPREPLY=( $(compgen -W "${short_actions}" -- ${cur}) )
                fi
                return 0
        else
                return 1
        fi

        unset cur short_actions short_set_options short_get_options
        unset long_get_options long_set_options long_actions plans prev governors
}

complete -F _pstate-frequency pstate-frequency
